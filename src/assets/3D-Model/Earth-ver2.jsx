/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 earth-ver2.gltf
*/

import { useRef, useEffect, useCallback } from 'react';
import { useGLTF, useAnimations } from '@react-three/drei';
import PropTypes from 'prop-types';

export function Model(props) {
    const { onLoad, hasViewModel } = props;
    const gltf = useGLTF('/earth/earth-ver2.gltf');
    const { animations } = gltf;
    const group = useRef();
    const { actions, mixer } = useAnimations(animations, group);

    const playAnimations = useCallback(() => {
        Object.values(actions).forEach((action) => {
            action.play();
        });
    }, [actions]);

    useEffect(() => {
        onLoad();
        group.current.position.set(3, 0, 0);
        group.current.rotation.set(0, 3.8, 0);

        if (hasViewModel) {
            playAnimations();
        }

        if (!hasViewModel) {
            mixer.stopAllAction();
        }

        return () => {
            mixer.stopAllAction();
        };
    }, [actions, hasViewModel, mixer, onLoad, playAnimations]);

    return (
        <group ref={group}>
            <primitive object={gltf.scene} />
        </group>
    );
}

useGLTF.preload('/earth/earth-ver2.gltf');

Model.propTypes = {
    onLoad: PropTypes.func.isRequired,
    hasViewModel: PropTypes.bool.isRequired,
};

Model.defaultProps = {
    onLoad: null,
    hasViewModel: null,
};
