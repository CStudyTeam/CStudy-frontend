/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.7 stampanimation_green.gltf
*/

import { useCallback, useEffect, useRef } from 'react';
import { useGLTF, PerspectiveCamera, useAnimations } from '@react-three/drei';
import { PropTypes } from 'prop-types';

export default function StampSuccess({ isAction, actionAnimations, animationTimeCheck }) {
    const group = useRef();
    const gltf = useGLTF('/stampanimation_green.gltf');
    const { animations } = gltf;
    const { actions, mixer } = useAnimations(animations, group);

    const playAnimations = useCallback(() => {
        Object.values(actions).forEach((action) => {
            action.play();
        });
    }, [actions]);

    useEffect(() => {
        if (isAction) {
            setTimeout(() => {
                animationTimeCheck(true);
                playAnimations();
            }, 650);
        }

        setTimeout(() => {
            actionAnimations(false);
            mixer.stopAllAction();
        }, 4000);
    }, [playAnimations, actionAnimations, isAction, mixer, animationTimeCheck]);
    return (
        <group ref={group}>
            <PerspectiveCamera
                name="카메라"
                makeDefault={true}
                far={1000}
                near={0.1}
                fov={15}
                position={[10.508, 140.245, 522.667]}
                rotation={[0.005, -0.037, 0]}
            />
            <primitive object={gltf.scene} />
        </group>
    );
}

useGLTF.preload('/stampanimation_green.gltf');

StampSuccess.propTypes = {
    actionAnimations: PropTypes.func.isRequired,
    animationTimeCheck: PropTypes.func.isRequired,
    isAction: PropTypes.bool.isRequired,
};

StampSuccess.defaultProps = {
    actionAnimations: null,
    animationTimeCheck: null,
    isAction: null,
};
